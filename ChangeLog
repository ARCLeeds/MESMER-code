
2008-6-01 Struan Robertson

  * dMatrix.h: Introduction of inversion method and other minor changes requied to remove Supermolecules.

2008-6-01 Struan Robertson

  * Reaction.h: Moved reactant definitions onto to derived classes.
  * Minor tidying up.

_2008_05_31__17_18_15_ Chi-Hsiu Liang

  * Update baselines. 
    The equilibrium constant for an association reaction of previous baselines were calculated from dividing product 
    rovibronic partition function by combined contribution of the rovibronic partition function of reactant 1 and reactant 2, 
    translation, and then time the expression by the excess reactant concentration. Since the density of states for 2-D linear
    rotors were not correct, so the baseline of OH acetylene system has to be updated. 
    Also in the equilibrium constant of association reaction, from Version 141, dividing Qpdt1 by Qrcts, instead of (Qrct1 * Qrct2),
    and added a checkpoint there to see the difference between (Qrct1 * Qrct2) and Qrcts.
    I have changed the code of 2-D linear rotors in Version 141 but only update the baselines in this version. The eigenvalues 
    of OH-acetylene system is now closer to Dave's old code.

2008-5-31 Struan Robertson

  * CollidingMolecule.cpp/Matrix.h: Move normalization method back to colliding molecule class for the present. Matrix class should be used for linear algebra only.

_2008_05_30__16_46_28_ Chi-Hsiu Liang

  * Move double m_ERConc (excess reactant concentration) from AssociationReaction to be a SuperMolecule member variable.
  * Added bool MesmerEnv::grainedProfileEnabled   --> print species profile before summation
          double MesmerEnv::maxEvolutionTime      --> for user to choose maximum length of time the species profile can evolve.
  * Updated   bool ReactionManager::calculateEquilibriumFractions(const double beta) to include excess reactant concentration.
  * Updated   bool ReactionManager::timeEvolution(int maxTimeStep, const double beta) to print out individual species profile.
  * Added comment for equilibrium fraction routine. See the end of ReactionManager.cpp: _2008_05_30__12_48_35_
  * Still need to sort out the specie profile for sink terms. Also need to consider if the sink term has only one product.
  
2008-5-30 David Glowacki

* add manual (oops!)

2008-5-30 David Glowacki

* add and delete various comments
* add an initial version of the MESMER User's manual to the documentation section

_2008_05_24__15_59_03_ Chi-Hsiu Liang

  * Corrected the population fraction routine so that it only gives the population fraction of the range we are interested.
    -- please refer to normalizedGrainDistribution()
  * Renamed grnCanPrtnFn() to rovibronicGrnCanPrtnFn() to indicate that it includes the rotation, vibration and electronic degeneracies
  * Isolate out translational contribution of two molecules to a function called translationalContribution() in MesmerTools.h
  * Corrected the calculation of DOS on 2-D linear rotors. 
  * Not sure if the Boltzmann distribution of HSO2 is right?
  * Basic structure of producing species profile is done; needs debugging.
    -- please refer to calculateEquilibriumFractions(), produceInitialPopulationVector() and timeEvolution().
  * Add m_eigenvalues to ReactionManager

_2008_05_21__10_51_16_ Chi-Hsiu Liang

  * Update baselines for all test systems.
  * There is probably a memory leak in Mesmer. Need to find out what variables are not initialized properly. 
    -- Problem: When turn on <me:printGrainDOS /> in pentyl_isomreization.xml, the eigenvalues calculated deviate from when this flag
                is off, however the differences are small. The problem maybe from the precision change in the calculation.

_2008_05_19__16_34_38_ Chi-Hsiu Liang

  * Added a plug-in class for calculating distribution. This plug-in can be used to produce either cell or grain 
    distribution fractions. Please check for calculateDistributionFractions()
    -- This function will be responsible for the distribution of a species. In case not a Boltzmann distribution, an additional 
       plug-in class will be required.
  * isomers and sources are now member varaibles of ReactionManager. They are cleared every time when the system collision operator
    is built.
  * Add a function for time evolution calculation, which generates time-dependent species profiles. (not complete)
  * Added a variable m_population in all CollidingMolecule and SinkMolecule.
  * Force 1st member of SuperMolecule be CollidingMolecule. Need to think about how to treat association of identical molecules.
  * Added a class a2d_t for making dynamic two-dimensional matrix.
  * Need to adjust cellEne for offset.

2008-5-18 Struan Robertson

  * SimpleILT.cpp: remove dependency on Supermolecules.
  * 0ther minor tidying.

_2008_05_13__09_30_00_ Chi-Hsiu Liang

  * Mesmer now force an DissociationReaction to have two products. Zero-point energy of the products are required for drawing
    potential energy surface in XML output and tunneling calculation.
  * Added virtual functions get_rctZPE() and get_pdtZPE() in Reaction, they return the ZPE's of reactant(s) and product(s),
    relative to the deepest well bottom. (Considering to prevent user from using get_zpe(), as this
    function returns raw ZPE's of the molecules. Will make it private/protected later.)
  * Microrate Calculator now calculates transition state flux instead of k(E)s
  * removed virtual bool grnAvrgMicroRateCoeffs(); added virtual void calcGrainRateCoeffs() in all reaction 
    types for converting TSFlux to k(E)s
  * Added  m_ActivationEnergy   in AssociationReaction
  * An additional option for getting k(E)s only, without building collision operators (me:calculateRateCoefficinetsOnly)
    -- Removed AddMicroRates() and rearranged codes within BuildSystemCollisionOperator(MesmerEnv &Env) for control purposes.
  * calcDensityOfStates() now decides whether to recalculate the DOS or not.
  * Added cell offset variable in ModelledMolecule to account for the cell shifts when converting from cell to grain
    -- see shiftCells(), set_grainValues() and m_cellOffset
  * Added a function double ModelledMolecule::get_relative_ZPE() that returns ZPE in wavenumber relative to the ZPE 
    of the deepest well bottom.
  * change m_grnZpe from int to double
  * bool SetGrainParams() is now moved to ReactionManager, user can choose whether to use the same number of cells
    throughout various conditions.
  * Added getHeatOfReactionInt() in Reaction, which force all energy values in integral wavenumbers. If energy values are
    in double the calculation of heat of reaction may differ by one wavenumber. For example,
    If the product ZPE is 9.1, and reactant ZPE is 42.8, the heat of reaction calculated in double will be -33.7, which 
    is -34 when rounded to int. But if these ZPE are rounded before the HoR is calculated, the HoR will be -33.
  * Move m_pdt1 to all derived classes of Reation. In DissociationReaction and ExchangeReaction, it is only a ModelledMolecule.
  * Added
    virtual double get_relative_rctZPE(void) const = 0;
    virtual double get_relative_pdtZPE(void) const = 0;
    virtual double get_relative_TSZPE(void) const = 0;
    for class Reaction. These functions return species ZPE's of a reaction in wavenumber relative to the deepest well bottom.
  * Updated Makefile
  * Added a derived class SinkMolecule
    -- Moved m_Mass to ModelledMolecule and BathGasMolecule, moved m_Sigma and m_Epsilon to CollidingMolecule 
       and BathGasMolecule.
  * qd_real and dd_real are still not working in this version; therefore, I commented them out.

2008-04-26 Chris Morley

  * Made projects for static libraries for TinyXML and qd within the solution.
    Left only linux qd files and used the source files for the Windows build.
    Configuration files are copied as a pre-build event.
    Although its not implemented yet, it looks like the choice of precision is
    expected to be at compile-time, but would it not be better to be an option
    in the input file? (i.e. at runtime)
  
2008-4-23 David Glowacki

  * change the name of Cyclopropene_isomerization.xml to Cyclopropene_isomerization_test.xml
  * add comments to simpleRRKM class
  * update the pentyl baseline, which had not been done since version 106

_2008_04_23__10_12_19_ Chi-Hsiu Liang

  * Added a comment on equilibrium constant
  * Added a planning block for the TimeEvolution() loop (not yet defined)

_2008_04_22__11_14_43_ Chi-Hsiu Liang

Updated file dependencies

_2008_04_22__10_55_37_ Chi-Hsiu Liang

  * Convert zero-point energy to wavenumber and concentration to number density while parsing.
  * Further clean up some error report messages.
  * Added a function XmlReadPropertyAttribute() to Persistence.h and XmlPersist.h/.cpp for reading attribute of the property
   (such as unit of energy)
  * reset initialization of m_HeatOfReaction to nothing. For dissociation, this value should be NaN if not defined.
  * Added unitConversion.h/.cpp for converting units.

_2008_04_21__10_17_30_ Chi-Hsiu Liang

  * Further tidy up the errorMsg and some previous debug flags.

2008-4-18 David Glowacki

  * replace supermolecule pointers with modelledmolecule pointers
  * alter simplerrkm, remove reference to supermolecule
  * update HSO2 baseline

2008-4-18 David Glowacki

  * clean up reaction manager.cpp
  * clean up mesmerilt.cpp
  * clean up AssociationReaction.cpp

_2008_04_18__11_28_41_ Ch-Hsiu Liang

  * Input the units of concentration by a string instead of meaningless number
  * removed some debugflags

2008-4-18 David Glowacki

  * moved subsidiary reactant 2 from reaction.h to the derived classes association and exchange
  * change ActivationEnergy to ThresholdEnergy

2008-4-18 David Glowacki

  * moved subsidiary product 2 from reaction.h to the derived classes dissociation and exchange

_2008_04_18__09_28_31_ Chi-Hsiu Liang

Change back MesmerHP to double in dMatrix.h

2008-4-17 David Glowacki

  * created pure virtual methods in reaction.h for describing detailed balance in association, isomerization, exchange, and dissociation reactions
  * updated baselines for HSO2 & cyclopropene
  * replace max grain size variable to use member data m_ncolloptrsize in collidingmolecule

2008-4-17 David Glowacki

  * corrected collision operator initialization routine
  * added cyclopropene baseline + input file

2008_04_17__11_44_02_ Chi-Hsiu Liang

  * Updated baseline for association reaction
  * review of association equilibrium constant


2008-4-17 David Glowacki

  * EckartCoefficients.cpp:  add comments to clarify.

2008-1-27 Struan Robertson

  * Reaction.h:  Declare methods InitializeReaction and calcEquilibriumConstant
  pure virtual, and associated changes.

2008-1-27 Struan Robertson

  * Reaction.h:  Move all public data to protected data, and concomitant changes.

_2008_04_04__14_25_39_ Chi-Hsiu Liang

  * renamed grnDensityOfStates() -> getGrainDensityOfStates()
  * Changed detailed balance on the cell level to the grain level
  * Corrected codes where DOS and rate coefficients are not referenced to the well bottom.
  * EAboveWell renamed to EAboveHill to reflect that this energy value is above the highest hilltop
    but not the highest well bottom
  * Code for setting grain ZPE of all speices
  * Corrected getClassicalEnergy()
  * rename grnAvg() -> rateConstantGrnAvg()
  * put minEnergy in ReactionManager.cpp to ReactionManager.h as m_minEnergy
  * Add a short section in ReactionManager.cpp (Line 147 - 182) to set grain ZPE for all speices
  * setup basic constants and derived constants in Constants.h

_2008_03_27__14_49_28_ Chi-Hsiu Liang

  * Added a plugin class for Tunneling
  * Added getClassicalEnergy() for calculating classical electronic for molecules (without ZPE corrections)
  * Added a member m_Description in Molecule class for more detailed description of any molecule.
  * Added m_ImFreq for Tunneling parameter in TransitionState
  * Renamed BeyerSwinehart.h to convolution.h
  * Added EckartCoefficients.h (method for Tunneling )
  * Added condition loop (DOS only calculated once, other parameters updated in every loop).
  * Problem: If there are several conditions defined, it seems XML file only records the final calculated condition.

_2008_03_14__17_43_39_ Chi-Hsiu Liang

  * Concentrations and pressures are not directly interconvertable. They relate each other with temperature
  and other factors. Inputting concentration by particles per cubic centimeter and converting it to mols is direct
  , but for pressures we need conversion through idea gas constant and temperature. So these parameters has to come
  in pairs: <concentration, temperature> or <pressure, temperature>.

    //--------------
    //  The concentration/pressure units are of following formats:
    //  units:
    //   0: particles per cubic centimeter
    //   1: Torr
    //
    //  Allowed input formats are shown below (example units in particles per cubic centimeter).
    //
    //  <me:CPTs>
    //    <me:CPTset me:units="0">
    //      <me:CPrange initial="1e8" increment="2e7" final="2e8">
    //      <me:Trange initial="100" increment="20" final="200">
    //    </me:CPTset>
    //  </me:CPTs>
    //
    //  The above example will create a matrix of concentration/temperature points of the size:
    //      (number of CP points) x (number of T points)
    //
    //  Another example of specifying small numbers of CPT points (example units in Torr):
    //
    //  <me:CPTs>
    //    <me:CPTpair me:units="1" me:CP="100" me:T="200">
    //    <me:CPTpair me:units="0" me:CP="1e18" me:T="298">
    //  </me:CPTs>
    //
    //  The looping of the CPT points are easy, they are first parsed and all the points are stored in pairs in
    //  vector CPandTs, and Mesmer simply loop through all its members.
    //--------------

_2008_03_13__15_53_37_ Chi-Hsiu Liang

  Change the zpe numbers of pentyl system and HSO2 system so that they are kJ/mol

_2008_03_13__12_14_38_ Chi-Hsiu Liang

  Return the constants changed from 107-108.

_2008_01_31__19_01_16_ Chi-Hsiu Liang

  * Removed all KcalPerMolToRC in Mesmer. This made the calculation slow. The input units are SI.
    (It might be worthwhile to convert the activation energy to RC directly from the function get_ActivationEnergy()
    can provide automatic unit conversion if the input units are not SI.)
  * See whether destructors of base/derived classes are virtual.
  * Implementation of Bayer_Swinehart.h
  * Add a function Matrix<T>::showFinalBits(int) in Matrix.h to print out the final bits of the matrix.
  * Added forward and backward cell/grain microcanonical rate constants
  * Change the number of digits on the exponents in cygwin. (formatfloat.h)
  * Modified a bit on Matrix<T>::normalize()
  * Added several flags to print data in mesmer.test. Check MesmerEnv.cpp and System.cpp line 133-142 for detail.
  * calculateMicroRateCoeffs() now has only one input parameter.
  * Created files for each class in Molecule.cpp to
      TransitionState.cpp
      SuperMolecule.cpp
      ModelledMolecule.cpp
      CollidingMolecule.cpp
      BathGasMolecule.cpp
  * Removed most of the accessor functions from Molecule.h to cpp files.
  * Moved destructor definition for MoleculeManager to MoleculeManager.cpp
  * Corrected the sequence of initialization of MessageHandler on oberror.h
  * Things about the activation energy has to be reconsidered. The experimental activation energy does not have to be
    consistent with the relative zero-point energy of the transition state. An option to add activation energy in the
    reaction list by user can also to be considered (not implemented yet).
  * Added a function detailedBalance(int) to interconvert forward and backward microcanonical rate constants.
  * Can also virtualize grnAvrgMicroRateCoeffs() for variations in different reaction classes later.
  * Should there only be either H or SO2 have ZPE = 39.44?
  * Added QD for Windows in qd folder.
      Additional steps to add QD library in Windows VC: (to be placed in documentation)
        1. One might build QD using qd.vcproj in debug mode to see if there are any errors.
        2. Build the project as a Release.
        3. In Mesmer property pages -> Configuration Properties -> C/C++ -> General -> Additional include directories
           Put "../../qd/Windows VC/include" into the list.
        4. In Mesmer property pages -> Configuration Properties -> Linker -> Input -> Additional dependencies
           Put "qd.lib" into the list.
        5. ?? How to link qd.dll? Program cannot execute!!

  * Other minor modifications.

2008-1-27 Struan Robertson

  * Re-implemented association reaction initialization and equilibrium constant
    methods.
  * Introduced excess reactant concentration for association reactions.


_2008_01_14__16_48_41_ Chi-Hsiu Liang

  * Modified Mesmer.dvi, Mesmer.tex.
  * Corrected OH_acetylene_association.xml. Updated OH_acetylene_association baseline.
  * Added several control sequence printing values. See MesmerEnv.h for additional control flags.
    Printing:
      grain density of states
      cell density of states
      collision operator column sums
      cell k(e)'s
      number of eigenvalues being printed
    Also, values are enclosed by braces, easier for copying and comparing.
  * Moved some longer definitions of accessors in Molecule.h to Molecule.cpp
  * Note: There should have a complaint over missing parameter on epsilon and sigma from HSO2, but the program will run with
          default values. (Need to give correct values.)
  * Updated pentyl and HSO2 baselines. HSO2 baseline does not change but pentyl baseline change because of the rounding
    difference between two versions. There are three differences on ClassicalRotor.cpp. also for the electron excitation
    energy. Another difference is on the starting count of electron excitation energy.
  * Other minor modifications.

2008-1-13 Struan Robertson

  * Elimination of the reaction type enumerated variable.

2008-1-13 Struan Robertson

  * Declared method InitializeReaction virtual and re-implemented it for
    isomerization class.

_2008_01_08__09_35_40_ Chi-Hsiu Liang

  * Deleted logged test files in \trunk\Windows VC8\Mesmer (anyone needs them shall copy them from the history)
  * Cleaned up the code. (No tabs, one tab converts to two spaces.)
  * removed a bug in source term persistent pointer locating.
  * Added a test system OH acetylene association.
  * Added a variable m_ERConc for excess reactant concentration in the Reaction.

2007-12-30 Struan Robertson

  * Made method get_unimolecularspecies pure virtual and re-implemented it on
    the derived classes.

2007-12-30 Struan Robertson

  * Added four new classes for each of the reaction types. These classes derive
    from the Reaction calss whihc is now an abstract class.

  * Updated QA files to reflect changes made to I/O.

2007-12-14 Chris Morley

  * Re-write of error handling and commandline. Big changes to
    oberro.h, oberror.cpp and main.cpp.

  * rename obErroLog to meErrorLog.

  * persistence.h: note about function names starting with Xml.
  * XMLPersist.cpp part of implementation to read from stdin (incomplete).

_2007_12_13__15_58_20_ Chi-Hsiu Liang

  * Prevented Elements of source molecule from duplication.

_2007_12_13__10_49_05_ Chi-Hsiu Liang

  * Corrected some default pointer types for ModelledMolecule and CollidingMolecule
  * Change back the default value for EAboveWell
  * Change the order of parsing molecule list and reaction list, this including:
    1. addmols() -> addmol()
    2. source term numbering (initially source_0)
    3. Modified GetMolRef() to add molecule and return its pointer

_2007_12_07__16_30_57_ Chi-Hsiu Liang

  * Check redundancy for m_deltaEDown, m_RotConsts, m_Sym, m_ZPE
  * privatize m_VibFreq
  * add get_deltaEDown()
  * Added m_NInf in Reaction
  * There seems to be something wrong in the code but I cannot tell where it is. I have set a flag
    if you look for this timestamp in the code: _2007_12_07__16_01_51_
    So if anyone has time to check what's wrong with it. I will keep on doing what I was doing.
    The problem looks like if I change this line (I know the syntax is wrong so I have modified it to the correct one),
    the collision operator will not be initialized correctly, which is a bit strange.

_2007_12_05__19_19_09_ Chi-Hsiu Liang

  * Added codes for input file parameters redundancy check in Molecule
  * Updated destructors in System to Molecule level. Let distructors report redundancies.
  * Added electronic excitation. (in DOS calculation and xml input.)
  * Set EAboveWell as a member of m_Env (later will add it into the xml input)
  * still need to put ninf in somewhere of xml.
  * other minor modifications

_2007_12_04__11_17_27_ Chi-Hsiu Liang

Updated baseline for Cygwin 32-bit double.

_2007_12_04__10_04_16_ Chi-Hsiu Liang

Allow user to input filename after program starts.

2007-12-2  Struan Robertson

  * Corrected the method of addition of isomer collision opertators to overall
  collision matrix.
  * Checked-in initial revision of Mesmer QA.

2007-11-30 Chris Morley

  * Removed Mesmer.exe from SVN. Compiled files are not usually in SVN
   and it always caused error messages when updating.

  * mEnv revamp.
  I've given Molecule and Reaction a member variable m_Env - a constant
  reference which is initiallised in the constructors. This avoids it
  being a parameter in lots of functions, reducing clutter in the place
  where the action is, even if the constructors are more complicated.
  Affects a large number of files.


_2007_11_28__17_40_29_ Chi-Hsiu Liang

  * Added some more error report in Molecule.cpp
  * some other corrections
  ToDo: 1. Automatically calculate the mass of a molecule from the atom list if the user forgot to provide it.

_2007_11_28__13_21_33_ Chi-Hsiu Liang

  * Corrected some issues in the order calculating density of states for molecules
  * If no pDOSCMethod or wrong is provided default method Classical rotors is used.
  * Added test_rotConsts() in Molecule.cpp
  * modified calcEquilibriumConstant() in Reaction.cpp (added the check for the consistency of partition function
    in SuperMolecule and the product of respective partition function of reactants. They should be equal.
    May include error later.)

_2007_11_27__12_39_58_ Chi-Hsiu Liang

  * Some corrections over the error checking on parsing.
  * Added spin multiplicity in the multiplication of DOS in monomer.
  * Modified the return type of get_unimolecularspecies(), the old method is not clear whether the inserted argument
    is for output or input.
  * Add a source term in m_molmap whenever if there isn't one. No matter if it is necessary to have a source or not. (See
    the end of addmols() in MoleculeManager.cpp)
  * Problem: sL variable out of range in the vector in AddAssocReactionTerms(), the reason is that the m_CellDOS not initialized
    properly for source term.
  * Added Windows VC8/Mesmer/HSO2_test.xml for test.

_2007_11_26__14_10_23_ Chi-Hsiu Liang

  * Corrected the usage on GetNextMolecule() in line 110 of Reaction.cpp
  * Todo: 1. need to check testDensityOfStates() for both ModelledMolecule and SuperMolecule
          2. test systems, check AddAssocReactionTerms()

_2007_11_23__17_26_41_ Chi-Hsiu Liang

  * Added two static variables sigmaDefault, and epsilonDefault.
  * Some comments on dMatrix.cpp
  * Modified some information reports.
  * reorganised some orders of molecular initialization.
  * Added setPersistentPointer() for Molecule
  * Added some codes in MoleculeManager.cpp & Reaction.cpp about adding SuperMolecule (some errors still exist)
  * Problem for SuperMolecule: 1. After adding a SuperMolecule into m_molmap, still cannot use GetNextMolecule() to
                               retrieve it!?
                               2. Matrix diagonalization does not converge.

_2007_11_22__10_57_55_ Chi-Hsiu Liang

  * modified some tags in bin/pentyl_isomerizationJul.xml
                          bin/OH_acetylene_association.xml
                          Windows VC8/Mesmer/pentyl_isomerization.xml
                          Windows VC8/Mesmer/pentyl_isomerizationJul.xml

  * modified function names: cellEnergies() -> getCellEnergies
                             cellDensityOfStates -> getCellDensityOfStates
    for the fact that these two functions only performs get functionality. Note: Result credibility should check before
    execution.
  * Added files ClassicalRotor.cpp/h, DensityOfStates.cpp/h
  * Moved counterDimerDOS() to a plugin class DensityOfStatesCalculator (DensityOfStates.h)
  * modified the original ModelledMolecule::calcDensityOfStates() so that it governs the calculation of DOS in both
    ModelledMolecule and SuperMolecule
  * m_VibFreq temporarily become a public variable (if necessary will add accessors and privatize it later)
  * Added DensityOfStatesCalculator *m_pDensityOfStatesCalculator ; in ModelledMolecule.
  * Added functions to get individual member of participant Molecules in SuperMolecule
  * Important: Now all isomers have to be specified `colliding' instead of being only `modelled' in xml.
               Both second reactant/product are ModelledMolecule. Please read MoleculeManager.cpp
               line 33 to line 44.
  * Important: Added a tag me:DOSCMethod in each molecular element of XML input.
               This makes it possible to use different methods to calculate the DOS in different species.
  * Added a new function addSuperMol() in MoleculeManager
  * rearranged the variable definition and function declaration order in Reaction.h
  * Add bool return to BuildSystemCollisionOperator()
  * Add another test file Windows VC8\Mesmer\OH_acetylene_association.xml

  To do Next: 1. Debug
              2. Add an element in xml file for SuperMolecule.
              3. Test systems.

_2007_11_15__18_37_45_ Chi-Hsiu Liang

  * Added a new class SuperMolecule (originally pairedMoleucles)
    Note: This new class is derived from CollidingMolecule; in addition, it includes two pointers to CollidingMolecule and
          ModelledMolecule respectively. This class takes the position of the source terms, any of which composed of two
          reactant molecules in an association reaction. All SuperMolecule(s) go into sources.
  * Added a new member SuperMolecule* m_srct in Reaction to represent the reactants.
  * Added int return values for get_unimolecularspecies and get_bi_molecularspecies (to differntiate reactions on the fly)
  * Errors, warnings and progress information all report to oberror.
  * rearranged the order of variables/functions in Molecule.h
  * Other minor modifications
  * Note: Need to solve initialization of some pointers here. Later develop plugin to calculate density of states etc of
          whatever.

_2007_11_13__11_17_57_ Chi-Hsiu Liang

  * modified the starting position of iteration in AddAssocReactionTerms() (consider revising)
  * Added a new class pairedMoleucles
  * privatise protected member variables in Molecule.h & setup accessors/mutators for these variables
  * rearranged the order initializing a molecule in classes
  * Changed temp into beta
  * include dMartix and Matrix into namespace mesmer
  * removed some typecast warnings in VC compiler
  * removed m_alloc
  * Add lines in bool MoleculeManager::addmols() preventing user from inputting duplicated molecules
  * Modified oberror report level from obWarning to obInfo.
  * moved m_SpinMultiplicity to ModelledMolecule
  * some other minor modifications

2007-10-21  Struan Robertson

	* Molecule.cpp/Reaction.cpp: Added methods to calcualte equilibrium
        constant.
        * Reaction.cpp: Altered secondary reactant and product to be
        ModelledMolecule.

_2007_11_02__16_40_03_ Chi-Hsiu Liang

  * modified the way of classifying rotors
  * modified calcDensityOfStates() & testDensityOfStates() for additional rotors
  * still cannot calculate microcanonical rate constants correctly, keep on checking.
  * A sample file OH_acetylene_association.xml is provided to check association.

_2007_11_02__15_08_13_ Chi-Hsiu Liang

  * modified MesmerILT.cpp --- now it is a working (testing not complete) version of ILT, but need to modify
    ModelledMolecule::calcDensityOfStates() to account for 2-D linear rotors & non-rotors.
  * Added some error reporting for InitializeMolecule()
  * Added get_VibFreq() in Molecule.h
  * other minor modifications

_2007_11_01__18_14_46_ Chi-Hsiu Liang

  * Modified MesmerILT.cpp
  * renamed variables: m_MmtIntA, m_MmtIntB, m_MmtIntC to m_RotCstA, m_RotCstB, m_RotCstC respectively.

_2007_10_31__15_47_13_ Chi-Hsiu Liang

  * Added lines to sort rotational constants
  * Added a function countDimerCellDOS() to deal with convolution of DOS for two rotors (not complete)
  * Some other minor modifications

_2007_10_26__13_54_21_ Chi-Hsiu Liang

  * removed parenthesis after constructor of Reaction (looks like more than a declaration)
  * commented out default constructor of ReactionManager (if do nothing let the compiler choose what to do)
  * Modified naming of function:  XmlLoad() -> XmlCreate()
  * Modified class MesmerEnv to struct
  * Modified MesmerILT.cpp
  * Put convolution in MesmerMath.h
  * Added m_SpinMultiplicity as a member of Molecule
  * Modified namings of variables: m_Reactant -> m_rct1
                                   m_Reactant1 -> m_rct2
                                   m_Product -> m_pdt1
                                   m_Product1 -> m_pdt2
  * Added Reaction::get_bi_molecularspecies()
  * Added MesmerMath.cpp
  * Compiled MesmerILT.cpp (some variables and DOS formulations are not complete)
  * Updated source.ps
  * Some other minor modifications

2007-10-21  Struan Robertson

	* Molecule.cpp: Added method to calculate Bolzmann distribution.
	* Reaction.cpp: Added material to assocation reaction section. Note
          need a method to calcualte equilibrium constant.

_2007_10_10__08_20_39_ Chi-Hsiu Liang

  * removed pSys, GetSys() and m_pSys
  *-----------------------------------------
  * About MesmerEnv
  * added `MesmerEnv.h' and `MesmerEnv.cpp'
  * moved environmental variables from `System.h' to `MesmerEnv.h'
  * environmental variables are now included in a variable instance mEnv
  * mEnv is a public member of System, lives and dies with System object
  * mEnv is passed down to functions in const, instead of passing whole system
  * New instance of System can be threaded safely with all variables self-contained. e.g. vector of systems
  *-----------------------------------------
  * replace <math.h> by <cmath> (for several math function auto-conversions)
  * renamed `System' variable in main.cpp to _sys
  * reorganised file dependencies
  * updated source.ps
  * removed ReactionConnectivity.cpp/h

_2007_10_08__13_38_55_ Chi-Hsiu Liang

  * Removed QD/DD/double flags in files: dMatrix.h, Molecule.cpp
  * Modified platform specific definition checks: MesmerConfig.h
  * Commented out TimeString()
  * use ctime instead of time.h
  * Writes new style time stamp in xml files
  * Now checks with compilation in VC++
  * Updated source.ps

_2007_10_05__14_00_29_ Chi-Hsiu Liang

  * Removed CXSC

_2007_10_05__13_30_14_ Chi-Hsiu Liang

  * Some CXSC flags
    CXSC is considered too slow. So will be deleted afterward. This version is only a record for future reference.

_2007_10_04__11_59_35_ Chi-Hsiu Liang

  * Updated "Mesmer FAQ.doc"
  * Updated source.ps
  * modified main.cpp so that the output filename is date stamped.
  * added TimeCounter.cpp
  * Modified TimeCounter.h
    Time stamp can now be applied to occasions where proper. Please check TimeCounter.h for usage.

_2007_10_03__11_06_49_ Chi-Hsiu Liang

  * Added the CXSC library source code folder
    Sorry, forgot to add CXSC library code for everyone. Please install it in your own computer, e.g. /usr/cxsc , etc..
    Usage (in UNIX/Linux/Mac?):
    Type the following command in command line mode under the directory of cxsc.
    ./install_cxsc
  * variable declarations in MesmerPrecision.h

_2007_10_03__10_42_44_ Chi-Hsiu Liang

  * Added selection of QD/DD/CXSC (CXSC not yet implemented/tested, but has linked)
  * Removed the error from the previous commit in Matrix.h
  * Added TimeCount header for time measuring and stamping
    TimeCount can be accessed through several functions listed in TimeCount.h to be used by anyone uses Mesmer.
    Examples are also listed.
  * Commented out some unused type definitions in matrix.h
  * Some other minor modifications

_2007_09_28__14_16_39_ Chi-Hsiu Liang

  * QD for double-double and quad-double precisions.
  * Move normalization function into matrix.h
  * Completed writing of MesmerILT.cpp but not linked and tested.
  * Modified namings of variables:  ngrn -> MaximumGrain
  * Add README, MesmerPrecision.h
  * Mesmer FAQ file in documentation folder
  * Other minor modifications

_2007_09_25__10_31_44_ Chi-Hsiu Liang

  * Add a ToDo file
  * Add qd source into trunk directory
  * Precision definitions in MesmerConfig.h
  * More edits to MesmerILT.cpp
  * Modified namings of variables:  kfmc -> cellKfmc
                                    m_kfgrn -> m_GrainKfmc
                                    m_kfmc -> m_CellKfmc
                                    dosGrn -> grainDOS
                                    eGrn -> grainEne
                                    m_gdos -> m_grainDOS
                                    m_egrn -> m_grainEne
                                    rctDos -> rctDOS
                                    pdtDos -> pdtDOS

  * change CellEne and CellDOS to vectors
  * some other minor modifications

_2007_09_14__16_30_42_ Chi-Hsiu Liang

  * checked for new and delete declarations
  * reordered some dependencies
  * Modified namings of variables:  decll -> CellEne,
                                    ddos -> CellDOS,
                                    m_cdos -> m_CellDOS,
                                    m_ecll -> m_CellEne,
                                    pcollidingmolecule -> pCollidingMolecule,
                                    KCMLTOPCM -> KcalPerMolToRC,
                                    ddosTS -> TScellDOS,
                                    boltzmann -> boltzmann_RCpK
                                    pi -> M_PI

  * Modified naming of functions: Initialize() -> InitializeMolecule(),
                                  Initialize() -> InitializeReaction(),
                                  igsz() -> getGrainSize(),

  * updated source.ps
  * added MesmerILT.cpp, MesmerILT.h, MesmerMath.h (for Gamma function)

2007-09-04 Chi-Hsiu Liang

	* in Molecule.cpp, function void CollidingMolecule::collisionOperator(double beta):
			vector<double> work only needs to have size GetSys()->MAXGrn()
	* Question:
			In Molecule.cpp, line 388, double ei = log(m_gdos[i]) - beta*m_egrn[i] + 10.0; why adding 10.0
			if the 10.0 power of ten will be cancelled in line 397:         (*m_egme)[j][i] *= (work[i]/work[j]);
			Any special meaning?
	* Removed duplicated files MicroRateCalculator.cpp & .h
	* pre-fix function names of XML operations with Xml to remove ambiguity.
	* added some varieties for MesmerConfig.h (not sure about platform specification rules)
	* altered some i++, j++ to ++i, ++j for better efficiency
	* other minor modifications
	* Now compile with i386 RedHat Linux

2007-09-02 Chris Morley

	* added a partial data file for Dave's benzene system
	(enough for the diagram) Updated the xsl files to improve
	diagram.

2007-08-31 Chi-Hsiu Liang

	* cygwin rules
	* formatfloat.h includes
	* additional Makefile commands
	* Now compile with cywgin
	* Updated source.ps
	* Other minor code format adjustments (Molecule.h/cpp, MoleculeManager.cpp, etc.)
	* Resolved some g++ compiler complaints.

2007-08-29 Chi-Hsiu Liang

	Minor modifications on three header files, and merge with the
	current modifications.
	Update the dependency tree.

2007-08-29 Chris Morley

	Make separate headers for SimpleRRKM.cpp and SimpleILT.cpp.
	Rename x versions.

	* src/MesmerConfig.h: separate header to take all platform-
	dependent defines.

	Remove global pSys. Add member variable m_pSys and GetSys()
	to MoleculeManager, ReactionManager, Molecule and Reaction.
	Pass down a pointer to the System during construction or
	Initialization.

	* src/main.cpp: add mesmer:: to obErrorLog. Remove pSys.

	Include math.h in MicroRate.cpp and Molecule.cpp

2007-08-23 Chi-Hsiu Liang

	1. The dependencies are reorganised for simplicity.
	2. util.cpp deleted (conflict with formatfloat.cpp/h)
	3. Incoporated oberror.h functions into mesmer.
	4. Tabs are reformatted into two spaces.
	5. Removed tailing spaces for some files.
	6. A file source.ps provided to explain the dependencies for the current version.

2007-08-19  Struan Robertson

	* Minor changes relating to the Linux build.

2007-08-18  Struan Robertson

	* src/ReactionManager.cpp:  Added material related to association
        reactions together with some minor changes relating to dissociation
        reactions.

        * Windows VC8/Mesmer/pentyl_isomerization.xml: Updated the pentyl
        isomerization input file to include dissociation reactions.

2007-08-08  Chris Morley

	Add the error handling files oberror.h and oberror.cpp. These are
	slightly modified OpenBabel files. Not yet used in Mesmer code.

2007-07-28  Chris Morley

	Various xml, xsl, etc file. Display of output file has energy level
	diagram  and collapsable data sections.

2007-07-28  Chris Morley

	* src/MicroRate.cpp, .h, src/SimpleILTx.cpp, src/SimpleRRKMx.cpp:
	Mod of MicroRateCalulator classes to be plugin classes and to keep
	all their data in the Reaction class.

	* src/Molecule.h, .cpp: Remove diagCollisionOperator which is also
	in ReactionManager

	* Persistence.h, XMLPersist.h,.cpp:Add ReadBoolean() and WriteAttribute
	methods. Activate Read() and modify WriteMainElement(). More flexibilty
	found to be necessary.

	* src.System.h,.cpp:Add ReadRange() method and use it for T, P and conc.
	Not yet used properly in calculation.

2007-07-21  Struan Robertson

        * src/MicroRateCalculator.cpp/.h: Separated micro-rate calcuator base
        class into separate file and added test method to this class.

        * src/SimpleILT.cpp/.h: Added implementation of simple dissociation ILT
        method.

2007-07-09  Struan Robertson

        * src/Reaction.cpp/.h: Separated micro-rate calcuation code into
        calculator classes.

        * src/SimpleRRKM.cpp/.h and SimpleILT.ccp/.h calculator classes added to
        calculate micro. rate coeffs. via RKKM and ILT respectively.

2007-06-12  Struan Robertson

        * src/Reaction.cpp/.h: Isomer reaction terms reviewed and simplified,
        unnecessary methods and variables removed.

2007-06-10  Struan Robertson

	* src/ReactionManager.cpp:  Altered to invoke reaction objects to add details
        of reaction to collision operator.

        * src/Reaction.cpp/.h: altered to include detailed balancing and others
        methods for adding isomer reaction terms to the collision operator

        * Minor changes to System and Molecule classes to support the above
        changes.

        * Update of Linux Makefile.

2007-06-07  Chris Morley

	* src/Molecule.h: Remove MAXCELL and MAXGRN and (unused)
	member variables. Make calcDensityOfStates public.

	* src/System.cpp: Read <me:ModelParameters> for(at present)
	grain sizes and set in SetGrainParams().

	* src/main.cpp: Add pSys as a global variable to System.
	Catch a couple of input errors.

	* src/MoleculeManager.h: Add templated function
	GetNextMolecule() for iterating through the molecules of
	a requested type.

	src/Reaction.h,cpp: Save and access reaction id.

2007-05-22  Struan Robertson

	* Minor update to allow collision frequency to be calculated for all isomers.

2007-05-20  Struan Robertson

	* src/ReactionManager.cpp/.h: Altered so that it no longer uses the
        ReactionConnectivety class.

        * src/MoleculeManager.cpp/.h: Accessor methods added to locate the bath
        gas molecule. This is required in the calculation of bath collision
        frequencies. Knock on changes required to Molecule.cpp/.h and System.cpp/
        .h

2007-01-29  Chris Morley

	I/O rewritten to improve code isolation and allow TinyXML
	to be replaced if necessary. See description in Persistence.h

	* src/XMLPersist.h, src/XMLPersist.cpp added.
	* src/Persistence.cpp removed
	* src/util.cpp added. Contains formatFloat(), now a global
	function.

	Extensive changes to:
	* src/Persistence.h, (IPersistObject rename to IPersist)
	and most other files.

2007-01-18  Chris Morley

	* src/Persistence.h, Persistence.cpp: Added output utility
	functions WriteElement(), WriteMainElement() and
	WriteValueElement(). In IPersistObject at present, but maybe
	they should be elswhere.

	* src/Molecule.h, Reaction.h: Added member variable to retain
	object address in XML document.

	* src/Molecule.cpp(testDensityOfStates): Output also to XML

	* src/Reaction.cpp(testMicroRateCoeffs): Output also to XML

	* src/pentyl_isomerization.xml: Correct extra " typos

	* Windows VC8/Mesmer/mesmer1.xsl: Added. Provides formating when
	XML file viewed in a browser.

2007-01-18  Chris Morley

	* tinyxml/tinyxmlparser.cpp: small patch to allow xml-stylesheet
	instuction to be passed on. See:
	http://sourceforge.net/tracker/index.php?func=detail&aid=1618031&group_id=13559&atid=313559

	* src/main.cpp: Can specify output file with default of adding
	out before extension on inputfile name. Added usage function and some exit codes.

